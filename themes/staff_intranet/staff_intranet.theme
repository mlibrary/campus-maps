<?php

/**
 * @file
 * Functions to support theming in the staff_intranet theme.
 */

use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
/* this will work to alter login path
function staff_intranet_preprocess_menu__account(&$variables) {
  if (\Drupal::currentUser()->isAnonymous()) {
    $current_uri = \Drupal::request()->getRequestUri();
    $variables['items']['user.logout']['url']->setOption('query', ['destination' => $current_uri]);
  }
}
*/
/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function staff_intranet_preprocess_html(&$variables) {
  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'layout-no-sidebars';
  }

  if (!empty($variables['page']['featured_top'])) {
    $variables['attributes']['class'][] = 'has-featured-top';
  }

}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function staff_intranet_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = array(
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    );
    $variables['title_suffix']['shortcut_wrapper'] = array(
      '#markup' => '</div>',
      '#weight' => -99,
    );
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }

  // Alter access denied for logged in users.
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->id() == 54043 && \Drupal::currentUser()->id()) {
      $variables['title'] = "Sorry. You don't have access to this particular piece of content.";
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
function staff_intranet_preprocess_maintenance_page(&$variables) {
  // By default, site_name is set to Drupal if no db connection is available
  // or during site installation. Setting site_name to an empty string makes
  // the site and update pages look cleaner.
  // @see template_preprocess_maintenance_page
  if (!$variables['db_is_active']) {
    $variables['site_name'] = '';
  }

  // staff_intranet has custom styling for the maintenance page.
  $variables['#attached']['library'][] = 'staff_intranet/maintenance_page';
}

/**
 * Implements hook_preprocess_HOOK() for fieldset.html.twig.
 */
function staff_intranet_preprocess_fieldset(&$variables) {
  // Remove the description on newsletter workflow since in form/details.html.twig also.
  if ($variables['element']['#id'] == 'edit-field-newsletter-workflow-0-to-sid') {
    unset($variables['description']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function staff_intranet_preprocess_node(&$variables) {
  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }
  // Alter access denied for logged in users.
  if($variables['node']->id() == 54043 && \Drupal::currentUser()->id()) {
    $variables['content'] = \Drupal\Core\Render\Markup::create("
      <p>This content is restricted. You may not have access due to a workflow.</p>
      <p>If you need assistance please contact <a>design-discovery@umich.edu</a>.</p>");
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function staff_intranet_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function staff_intranet_preprocess_menu(&$variables) {
  $variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function staff_intranet_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
  elseif ($variables['element']['#form_id'] == 'views_exposed_form' && strpos($variables['element']['#action'],'/title-geofield-map') !== FALSE) {
    $suggestions[] = 'form__title_geofield_map_views_exposed_form';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function staff_intranet_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
  }
}
/**
 * Implements hook_preprocess_HOOK() for text-format-wrapper.html.twig.
 */

function staff_intranet_preprocess_form_element(&$variables) {
//for some horrific reason, description is null for text areas at this point.
//TODO revisit this
if($variables['description'] == null){
}
}

function staff_intranet_page_attachments_alter(array &$page) {
  $current_path = \Drupal::service('path.current')->getPath();
  $current_path = explode('/', $current_path);

  //add no_big_pipe option for nids we use to generate the header and footer.
  //@todo make a config for stuff we dont want bigpipe handling?
  //@todo move this from theme to module?
  if (isset($current_path[2]) && in_array($current_path[2], array('54832','54834'))) {
    $route = \Drupal::routeMatch()->getRouteObject();
    $route->setOption('_no_big_pipe', TRUE);
  }

  //alter display for mobile devices on certain paths
  $current_path = $current_path[1];
  if (in_array($current_path, array('messages','documentation'))) {
    switch($current_path) {
      case 'messages':
        $viewport_content='width=1600, initial-scale=.1, maximum-scale=2, user-scalable=yes';
        break;
      case 'documentation':
        $viewport_content='width=1800, initial-scale=.075, maximum-scale=2, user-scalable=yes';
        break;
      default:
        $viewport_content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no';
    }
    $viewport = array(
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'viewport',
        'content' => $viewport_content,
      ),
    );
    $handheldfriendly = array(
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'HandheldFriendly',
        'content' => 'false',
      ),
    );
    $mobileoptimized = array(
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'MobileOptimized',
        'content' => 'width',
      ),
    );
    $page['#attached']['html_head'][] = [$viewport, 'viewport'];
    $page['#attached']['html_head'][] = [$handheldfriendly, 'HandheldFriendly'];
    $page['#attached']['html_head'][] = [$mobileoptimized, 'MobileOptimized'];
  }
}

/**
 * Implements hook_preprocess_HOOK() for node-add-list.html.twig.
 */
function staff_intranet_preprocess_node_add_list(&$variables) {
  // sort types by title, not machine name
  $types = [];
  $var_types = $variables['types'];
  foreach ($variables['types'] as $machine_key => $type) {
    $types[$machine_key] = strip_tags($type['add_link']->getGeneratedLink());
  }
  asort($types);
  $variables['types'] = array_merge($types,$var_types);
  // add webform link
  $can_edit_roles = array('administrator1', 'admin_light', 'webform_archive_editor');
  $can_edit = array_intersect(\Drupal::currentUser()->getRoles(), $can_edit_roles);
  if (!empty($can_edit)) {
    if (\Drupal::moduleHandler()->moduleExists('webform')) {
      $url = \Drupal\Core\Url::fromRoute('entity.webform.add_form');
      $link = \Drupal\Core\Link::fromTextAndUrl('WebForm', $url);
      $description = \Drupal\Core\Render\Markup::create('Add a form for other users and organize the results');
      $variables['types']['webform'] = array(
        'type' => 'webform',
        'description' => $description,
        'add_link' => $link,
      );
    }
  }
}

function staff_intranet_preprocess_views_view(&$variables){
  if ($variables['id'] == 'newsletter' && $variables['display_id'] == 'block_3') {
    //$variables['title']['#markup'] = \Drupal\node\Entity\Node::load($variables['view']->args[0])->getTitle();
    $variables['date']['#markup'] = str_replace('Library Newsletter - ','',\Drupal\node\Entity\Node::load($variables['view']->args[0])->getTitle());
  }
  if ($variables['id'] == 'funds_transfer_requests') {
    $variables['csv_link'] = str_replace('/funds-transfer-requests-admin', '/funds-transfer-requests.csv', \Drupal::request()->getRequestUri());
  }
  if ($variables['id'] == 'shortcodes') {
    $variables['csv_link'] = str_replace('/shortcodes', '/shortcodes.csv', \Drupal::request()->getRequestUri());
  }
}

function staff_intranet_preprocess_table(&$variables) {
  //todo find a better way to do this
  $current_uri = \Drupal::request()->getRequestUri();
  if (preg_match('(/funds_transfer/node/(\d*)/workflow)', $current_uri)) {
    unset($variables['header']['operations']);
    foreach ($variables['rows'] as $key => $row){
      unset($variables['rows'][$key]['cells']['operations']);
    }
  }
}

// stoopid. no label when operator in use. grr. replace with field name.
// see staff_intranet_theme_suggestions_form_element_alter also. works together.
function staff_intranet_preprocess_form_element_label(&$variables) {
/*
  $form_op_field_name = &drupal_static('form_op_field_name');
  if (strpos($variables['element']['#id'], $form_op_field_name) !== FALSE &&
      strpos($variables['element']['#id'], '-value-') !== FALSE) {
    $label = ucwords(str_replace('-', ' ', str_replace('-value-value', '', str_replace('-value-op', '', str_replace('edit-field-', '', $variables['element']['#id'])))));
    $variables['title']['#markup'] = $label;
    if (strpos($variables['element']['#id'], '-value-op') === FALSE) {
      drupal_static_reset('form_op_field_name');
    }
  }
  if (strpos($variables['element']['#id'], $form_op_field_name) !== FALSE &&
      strpos($variables['element']['#id'], '-target-id-') !== FALSE) {
    $label = ucwords(str_replace('-', ' ', str_replace('-target-id-value', '', str_replace('-target-id-op', '', str_replace('edit-field-', '', $variables['element']['#id'])))));
    $variables['title']['#markup'] = $label;
    if (strpos($variables['element']['#id'], '-target-id-op') === FALSE) {
      drupal_static_reset('form_op_field_name');
    }
  }
*/
}

// stoopid. operator and element it operates on not grouped.
// see staff_intranet_preprocess_form_element_label also. works together.
function staff_intranet_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
/*
  $form_op_field_name = &drupal_static('form_op_field_name');
  if (strpos($variables['element']['#id'], 'value-op') !== FALSE || strpos($variables['element']['#id'], 'target-id-op') !== FALSE) {
    $form_op_field_name = str_replace('-op','',$variables['element']['#id']);
    $suggestions[] = 'form_element__wrap_exposed_filters_begin';
  }
  if (strpos($variables['element']['#id'], $form_op_field_name) !== FALSE && strpos($variables['element']['#id'], 'value-op') === FALSE && strpos($variables['element']['#id'], 'target-id-op') === FALSE) {
    $suggestions[] = 'form_element__wrap_exposed_filters_end';
  }
*/
}

// add a suggestion for fields at the view mode
function staff_intranet_theme_suggestions_field_alter(&$suggestions, $variables) {
  $suggestions[] = 'field__' . $variables['element']['#entity_type'] . '__' . $variables['element']['#field_name'] . '__' . $variables['element']['#bundle'] . '__' . $variables['element']['#view_mode'];;
}
